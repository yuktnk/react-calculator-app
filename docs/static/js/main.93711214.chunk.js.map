{"version":3,"sources":["features/calculator/calculatorSlice.ts","app/store.ts","components/CalcButton.tsx","components/CalcDisplay.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","addNumber","addCalculationSymbol","reset","calc","selectDisplayString","_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__","initialState","displayString","calculationSymbol","formatedCalculationSymbol","calculatorSlice","createSlice","name","reducers","state","action","payload","concat","kakeru","waru","lastString","length","tasu","hiku","slice","String","eval","actions","calculator","store","configureStore","reducer","StyledButton","styled","Button","_ref","theme","height","width","margin","fontSize","CalcButton","_ref2","color","_ref2$variant","variant","disabled","dispacth","useDispatch","react_default","a","createElement","onClick","value","StyledBox","Box","border","borderRadius","textAlign","padding","overflow","StyledTypography","Typography","CalcDisplay","useSelector","darkTheme","createTheme","palette","mode","StyledGrid","Grid","App","ThemeProvider","CssBaseline","className","container","spacing","item","xs","components_CalcDisplay","components_CalcButton","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","document","getElementById","createRoot","render","StrictMode","es","src_App"],"mappings":"kIAAAA,oBAAAC,EAAAC,oBAAA,sBAAAC,YAAAH,oBAAAC,EAAAC,oBAAA,sBAAAE,uBAAAJ,oBAAAC,EAAAC,oBAAA,sBAAAG,QAAAL,oBAAAC,EAAAC,oBAAA,sBAAAI,OAAAN,oBAAAC,EAAAC,oBAAA,sBAAAK,sBAAA,IAAAC,8CAAAR,oBAAA,IAOMS,aAAgC,CACpCC,cAAe,KAGZC,kBAOAC,oCAPAD,4GAOAC,6GAOE,IAAMC,gBAAkBC,wDAAY,CACzCC,KAAM,aACNN,0BACAO,SAAU,CAIRb,UAAW,SAACc,EAAOC,GAEW,MAAxBD,EAAMP,eAA4C,MAAnBQ,EAAOC,UAId,MAAxBF,EAAMP,gBACRO,EAAMP,cAAgB,IAGxBO,EAAMP,cAAgBO,EAAMP,cAAcU,OAAOF,EAAOC,WAM1Df,qBAAsB,SAACa,EAAOC,GAE5B,GAA4B,MAAxBD,EAAMP,cAAV,CAKAQ,EAAOC,UAAYR,kBAAkBU,SAClCH,EAAOC,QAAUP,0BAA0BS,QAC9CH,EAAOC,UAAYR,kBAAkBW,OAASJ,EAAOC,QAAUP,0BAA0BU,MAGzF,IAAMC,EAAaN,EAAMP,cAAcO,EAAMP,cAAcc,OAAS,GAElED,IAAeX,0BAA0BS,QACzCE,IAAeX,0BAA0BU,MACzCC,IAAeX,0BAA0Ba,MACzCF,IAAeX,0BAA0Bc,KAM3CT,EAAMP,cAAgBO,EAAMP,cAAcU,OAAOF,EAAOC,SAJtDF,EAAMP,cAAgBO,EAAMP,cAAciB,MAAM,GAAI,GAAKT,EAAOC,UAUpEd,MAAO,SAACY,GACNA,EAAMP,cAAgB,KAMxBJ,KAAM,SAAAA,KAACW,OAEL,GAA4B,MAAxBA,MAAMP,cAAV,CAKA,IAAMa,WAAaN,MAAMP,cAAcO,MAAMP,cAAcc,OAAS,GAElED,aAAeX,0BAA0BS,QACzCE,aAAeX,0BAA0BU,MACzCC,aAAeX,0BAA0Ba,MACzCF,aAAeX,0BAA0Bc,OAM3CT,MAAMP,cAAgBkB,OAAOC,KAAKZ,MAAMP,4CAKkBG,gBAAgBiB,QAAjE3B,0CAAWC,gEAAsBC,kCAAOC,gCAE1CC,oBAAsB,SAACU,GAAD,OAAsBA,EAAMc,WAAWrB,eAE3DG,sCAAf,kLC5GamB,EAAQC,YAAe,CAClCC,QAAS,CACPH,WAAYlB,0DCaVsB,EAAeC,YAAOC,IAAPD,CAAe,SAAAE,KAAGC,MAAH,MAAgB,CAClDC,OAAQ,OACRC,MAAO,OACPC,OAAQ,MACRC,SAAU,UA6BGC,EA1BI,SAAAC,GAA+E,IAA5EC,EAA4ED,EAA5EC,MAA4EC,EAAAF,EAArEG,eAAqE,IAAAD,EAA3D,WAA2DA,EAA/CE,EAA+CJ,EAA/CI,SAAUvC,EAAqCmC,EAArCnC,cACrDwC,EAAWC,cAcjB,OACEC,EAAAC,EAAAC,cAACnB,EAAD,CACEW,MAAOA,EACPE,QAASA,EACTC,SAAUA,EACVM,QAAS,WAjBO,IAACC,EAEjBN,EADY,QADKM,EAiBU9C,GAflBL,cACU,MAAVmD,EACAlD,cACU,SAAVkD,GAA2B,SAAVA,GAA2B,MAAVA,GAA2B,MAAVA,EACnDpD,YAAqBoD,GAErBrD,YAAUqD,MAWlB9C,sBCxCD+C,EAAYrB,YAAOsB,IAAPtB,CAAY,SAAAE,KAAGC,MAAH,MAAgB,CAC5CoB,OAAQ,sCACRnB,OAAQ,OACRC,MAAO,QACPC,OAAQ,SACRkB,aAAc,MACdjB,SAAU,OACVkB,UAAW,QACXC,QAAS,MACTC,SAAU,YAGNC,EAAmB5B,YAAO6B,IAAP7B,CAAmB,SAAAS,KAAGN,MAAH,MAAgB,CAC1DC,OAAQ,OACRC,MAAO,OACPK,MAAO,UACPH,SAAU,OACVkB,UAAW,WAYEK,EATK,WAClB,IAAMxD,EAAgByD,YAAY5D,KAElC,OACE6C,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAACU,EAAD,KAAmBtD,cCvBnB0D,EAAYC,YAAY,CAC5BC,QAAS,CACPC,KAAM,UAIJC,EAAapC,YAAOqC,IAAPrC,CAAa,SAAAE,KAAGC,MAAH,MAAgB,CAC9CuB,QAAS,eACTpB,OAAQ,eACRD,MAAO,WA0CMiC,MAvCf,WACE,OACEtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAepC,MAAO6B,GACpBhB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,MACAxB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,OACbzB,EAAAC,EAAAC,cAACkB,EAAD,CAAYM,WAAS,EAACC,QAAS,IAC7B3B,EAAAC,EAAAC,cAACkB,EAAD,CAAYQ,MAAI,EAACC,GAAI,IACnB7B,EAAAC,EAAAC,cAAC4B,EAAD,OAEF9B,EAAAC,EAAAC,cAACkB,EAAD,CAAYQ,MAAI,EAACC,GAAI,IACnB7B,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,MAC3B0C,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,MAC3B0C,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,MAC3B0C,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,OAAKsC,QAAS,eAE3CI,EAAAC,EAAAC,cAACkB,EAAD,CAAYQ,MAAI,EAACC,GAAI,IACnB7B,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,MAC3B0C,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,MAC3B0C,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,MAC3B0C,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,OAAKsC,QAAS,eAE3CI,EAAAC,EAAAC,cAACkB,EAAD,CAAYQ,MAAI,EAACC,GAAI,IACnB7B,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,MAC3B0C,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,MAC3B0C,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,MAC3B0C,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,IAAKsC,QAAS,eAE3CI,EAAAC,EAAAC,cAACkB,EAAD,CAAYQ,MAAI,EAACC,GAAI,IACnB7B,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,MAC3B0C,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,KAAMoC,MAAM,YACvCM,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,IAAKsC,QAAS,YAAaF,MAAM,YAC5DM,EAAAC,EAAAC,cAAC6B,EAAD,CAAYzE,cAAe,IAAKsC,QAAS,mBCtCtCoC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCtF,EAAAuF,EAAA,GAAAC,KAAAxF,EAAAyF,KAAA,WAAqBD,KAAK,SAAAlD,GAAiD,IAA9CoD,EAA8CpD,EAA9CoD,OAAQC,EAAsCrD,EAAtCqD,OAAQC,EAA8BtD,EAA9BsD,OAAQC,EAAsBvD,EAAtBuD,OAAQC,EAAcxD,EAAdwD,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDRP,SAAYiB,SAASC,eAAe,SAC7BC,qBAAWnB,GAEnBoB,OACH9C,EAAAC,EAAAC,cAACF,EAAAC,EAAM8C,WAAP,KACE/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAUpE,MAAOA,GACfoB,EAAAC,EAAAC,cAAC+C,EAAD,SAQNjB","file":"static/js/main.93711214.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\n\nexport interface CalculatorState {\n  displayString: string\n}\n\nconst initialState: CalculatorState = {\n  displayString: '0',\n}\n\nenum calculationSymbol {\n  kakeru = '×',\n  waru = '÷',\n  tasu = '+',\n  hiku = '-',\n}\n\nenum formatedCalculationSymbol {\n  kakeru = '*',\n  waru = '/',\n  tasu = '+',\n  hiku = '-',\n}\n\nexport const calculatorSlice = createSlice({\n  name: 'calculator',\n  initialState,\n  reducers: {\n    /*\n     * 0~9の数字が入力されたとき\n     */\n    addNumber: (state, action) => {\n      // 初期値０のときに入力された値が0のときはアーリーリターン\n      if (state.displayString === '0' && action.payload === '0') {\n        return\n      }\n\n      if (state.displayString === '0') {\n        state.displayString = ''\n      }\n\n      state.displayString = state.displayString.concat(action.payload)\n    },\n\n    /*\n     * 計算記号（×, ÷, +, -）が入力されたとき\n     */\n    addCalculationSymbol: (state, action) => {\n      // 何も入力されていないときはアーリーリターン\n      if (state.displayString === '0') {\n        return\n      }\n\n      // × と ÷ のときは * と / に変換する\n      action.payload === calculationSymbol.kakeru &&\n        (action.payload = formatedCalculationSymbol.kakeru)\n      action.payload === calculationSymbol.waru && (action.payload = formatedCalculationSymbol.waru)\n\n      // 最後の文字が計算記号の場合は、置き換えを行う\n      const lastString = state.displayString[state.displayString.length - 1]\n      if (\n        lastString === formatedCalculationSymbol.kakeru ||\n        lastString === formatedCalculationSymbol.waru ||\n        lastString === formatedCalculationSymbol.tasu ||\n        lastString === formatedCalculationSymbol.hiku\n      ) {\n        state.displayString = state.displayString.slice(0, -1) + action.payload\n        return\n      }\n\n      state.displayString = state.displayString.concat(action.payload)\n    },\n\n    /*\n     * オールクリア（ AC ）が入力されたとき\n     */\n    reset: (state) => {\n      state.displayString = '0'\n    },\n\n    /*\n     * = が入力されたとき\n     */\n    calc: (state) => {\n      // 何も入力されていないときはアーリーリターン\n      if (state.displayString === '0') {\n        return\n      }\n\n      // 最後の文字が計算記号の場合はアーリーリターン\n      const lastString = state.displayString[state.displayString.length - 1]\n      if (\n        lastString === formatedCalculationSymbol.kakeru ||\n        lastString === formatedCalculationSymbol.waru ||\n        lastString === formatedCalculationSymbol.tasu ||\n        lastString === formatedCalculationSymbol.hiku\n      ) {\n        return\n      }\n\n      // 計算を実行し、stateを更新\n      state.displayString = String(eval(state.displayString))\n    },\n  },\n})\n\nexport const { addNumber, addCalculationSymbol, reset, calc } = calculatorSlice.actions\n\nexport const selectDisplayString = (state: RootState) => state.calculator.displayString\n\nexport default calculatorSlice.reducer\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport calculatorSlice from '../features/calculator/calculatorSlice'\n\nexport const store = configureStore({\n  reducer: {\n    calculator: calculatorSlice,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\nimport Button from '@mui/material/Button'\nimport { useDispatch } from 'react-redux'\nimport {\n  addNumber,\n  addCalculationSymbol,\n  reset,\n  calc,\n} from '../features/calculator/calculatorSlice'\n\ntype CalcButtonProps = {\n  displayString: string\n  variant?: 'text' | 'outlined' | 'contained'\n  disabled?: boolean | undefined\n  color?: 'inherit' | 'secondary' | 'primary' | 'success' | 'error' | 'info' | 'warning'\n}\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  height: '80px',\n  width: '80px',\n  margin: '2px',\n  fontSize: '30px',\n}))\n\nconst CalcButton = ({ color, variant = 'outlined', disabled, displayString }: CalcButtonProps) => {\n  const dispacth = useDispatch()\n\n  const handleClick = (value: string) => {\n    if (value === 'ac') {\n      dispacth(reset())\n    } else if (value === '=') {\n      dispacth(calc())\n    } else if (value === '×' || value === '÷' || value === '+' || value === '-') {\n      dispacth(addCalculationSymbol(value))\n    } else {\n      dispacth(addNumber(value))\n    }\n  }\n\n  return (\n    <StyledButton\n      color={color}\n      variant={variant}\n      disabled={disabled}\n      onClick={() => handleClick(displayString)}\n    >\n      {displayString}\n    </StyledButton>\n  )\n}\nexport default CalcButton\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\n\nimport { Box, Typography } from '@mui/material'\nimport { useSelector } from 'react-redux'\nimport { selectDisplayString } from '../features/calculator/calculatorSlice'\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  border: '1px solid  rgba(144, 202, 249, 0.5)',\n  height: '80px',\n  width: '332px',\n  margin: '0 auto',\n  borderRadius: '4px',\n  fontSize: '24px',\n  textAlign: 'right',\n  padding: '8px',\n  overflow: 'scroll',\n}))\n\nconst StyledTypography = styled(Typography)(({ theme }) => ({\n  height: 'auto',\n  width: '100%',\n  color: '#90caf9',\n  fontSize: '40px',\n  textAlign: 'right',\n}))\n\nconst CalcDisplay = () => {\n  const displayString = useSelector(selectDisplayString)\n\n  return (\n    <StyledBox>\n      <StyledTypography>{displayString}</StyledTypography>\n    </StyledBox>\n  )\n}\nexport default CalcDisplay\n","import React from 'react'\nimport { ThemeProvider, createTheme } from '@mui/material/styles'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { styled } from '@mui/material/styles'\nimport './App.css'\nimport CalcButton from './components/CalcButton'\nimport CalcDisplay from './components/CalcDisplay'\nimport { Grid } from '@mui/material'\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n})\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n  padding: '0 !important',\n  margin: '0 !important',\n  width: '336px',\n}))\n\nfunction App() {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <StyledGrid container spacing={12}>\n          <StyledGrid item xs={12}>\n            <CalcDisplay />\n          </StyledGrid>\n          <StyledGrid item xs={12}>\n            <CalcButton displayString={'7'} />\n            <CalcButton displayString={'8'} />\n            <CalcButton displayString={'9'} />\n            <CalcButton displayString={'÷'} variant={'contained'} />\n          </StyledGrid>\n          <StyledGrid item xs={12}>\n            <CalcButton displayString={'4'} />\n            <CalcButton displayString={'5'} />\n            <CalcButton displayString={'6'} />\n            <CalcButton displayString={'×'} variant={'contained'} />\n          </StyledGrid>\n          <StyledGrid item xs={12}>\n            <CalcButton displayString={'1'} />\n            <CalcButton displayString={'2'} />\n            <CalcButton displayString={'3'} />\n            <CalcButton displayString={'-'} variant={'contained'} />\n          </StyledGrid>\n          <StyledGrid item xs={12}>\n            <CalcButton displayString={'0'} />\n            <CalcButton displayString={'ac'} color=\"warning\" />\n            <CalcButton displayString={'='} variant={'contained'} color=\"success\" />\n            <CalcButton displayString={'+'} variant={'contained'} />\n          </StyledGrid>\n        </StyledGrid>\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { Provider } from 'react-redux'\nimport { store } from './app/store'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './index.css'\n\nconst container = document.getElementById('root')!\nconst root = createRoot(container)\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}